Parameters:
  cidrBlock:
    Description: "CIDR block for VPC."
    Type: String
    Default: 192.168.0.0/16
  cidrBlockSubnetA:
    Description: "CIDR block for Subnet A."
    Type: String
    Default: 192.168.1.0/24
  cidrBlockSubnetB:
    Description: "CIDR block for Subnet B."
    Type: String
    Default: 192.168.2.0/24
  ec2InstanceClass:
    Description: "EC2 instance class (a list of allowed values must be pre-defined, t2.micro being the default);"
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro
      - m1.small
      - m1.large
  keyPair:
    Description: "EC2 key pair name"
    Type: String

Resources:
  NetworkingStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        cidrBlock: !Ref cidrBlock
        cidrBlockSubnetA: !Ref cidrBlockSubnetA
        cidrBlockSubnetB: !Ref cidrBlockSubnetB
      TemplateURL: https://kutzhanov-backup.s3.amazonaws.com/ansible/networking.yml

  SecurityGroupsStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        VPCid: !GetAtt NetworkingStack.Outputs.VPCid
      TemplateURL: https://kutzhanov-backup.s3.amazonaws.com/ansible/security_groups.yml

  ec2InstancesStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        subnetA: !GetAtt NetworkingStack.Outputs.subnetAid
        subnetB: !GetAtt NetworkingStack.Outputs.subnetBid
        AnsibleSGid: !GetAtt SecurityGroupsStack.Outputs.AnsibleSGid
        WebSGid: !GetAtt SecurityGroupsStack.Outputs.WebSGid
        DbSGid: !GetAtt SecurityGroupsStack.Outputs.DbSGid
        ec2InstanceClass: !Ref ec2InstanceClass
        keyPair: !Ref keyPair
      TemplateURL: https://kutzhanov-backup.s3.amazonaws.com/ansible/ec2_instances.yml
