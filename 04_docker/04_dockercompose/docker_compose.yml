version: '3.7'

# Docker Swarm service called 'balancer' with the configuration:
# 		based on Load Balancer image located in Docker Hub;
# 		port 80 is exposed;
# 		Apache configuration defined in Docker config;
# 		located in 'frontend' network;
# 		the service has one replica;
# 		restart policy is 'on-failure';
# 		reserve container resources by 25% of CPU and 256MB Memory;
# 		limit container resources by 50% of CPU and 512MB Memory;
# 		ensure that the service containers will be deployed only on nodes where 'role' label defined in 'front';
# 		add label 'service' with value 'load_balancer';

services:
  balancer:
    image: kutzhanov/myapache:latest
    expose:
      - "80"
    configs:
      - lb_config
    networks:
      - frontend
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.role == front
      restart_policy:
        condition: on-failure
      resources:
        reservations:
          cpus: '0.25'
          memory: 256M
        limits:
          cpus: '0.50'
          memory: 512M
      labels:
        service: "load_balancer"

# Definitions for 'frontend' and 'backend' attacheble overlay networks;
networks:
  frontend:
    driver: overlay
    attachable: true
    name: frontend-overlay
  backend:
    driver: overlay
    attachable: true
    name: backend-overlay

# Definitions for external Docker secrets 'mysql_user', 'mysql_pass', 'mysql_root_pass' and 'mysql_db';
secrets:
  mysql_user:
    external: true
  mysql_pass:
    external: true
  mysql_root_pass:
    external: true
  mysql_db:
    external: true

# Definitions for Docker configs 'lb_config' and 'web_config' with Load Balancer Apache configuration
# and Web Server virtual host settings content;
configs:
  lb_config: # Load Balancer Apache configuration
  # Create Apache Load Balancer configuration which will balance traffic between 'web' service containers by Round Robin method.
    file: ../01_proxy/mod_proxy.conf
  web_config: # Web Server virtual host settings
    file: ../02_web/httpd.conf

# Definitions for 'web_data' volume
volumes: # same as docker volume create
  web_data:
